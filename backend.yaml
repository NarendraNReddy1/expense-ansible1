- name: configure backend
  hosts: backend
  become: yes 
  vars:
    mysql_root_password: ExpenseApp@1
    login_host: db.narendra.shop  


  tasks:
  - name: disable nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: dnf install nodejs -y
    ansible.builtin.dnf:
      name: "{{item}}"
      state: latest
    loop:
    - nodejs
    - mysql  

  - name: install python mysql depenencies
    ansible.builtin.pip:
      name:
      - PyMySQL
      - cryptography
      executable: pip3.9     

  - name: useradd
    ansible.builtin.user:
      name: expense

  - name: /app
    ansible.builtin.file:
      path: /app
      state: directory

  - name: unarchieve
    ansible.builtin.unarchive:
      src:  https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /app    
      remote_src: yes   

  - name: npm install
    ansible.builtin.command: npm install
    args:
      chdir: /app

  - name: copy
    ansible.builtin.copy: 
      src: backend.service
      dest: /etc/systemd/system/backend.service    

  - name: import data into mysql
    community.mysql.mysql_db:
      login_user: root
      login_password: "{{ mysql_root_password }}"
      login_host: "{{ login_host }}"
      target: /app/schema/backend.sql
      state: import
      name: all

  - name: systemd
    ansible.builtin.systemd_service:
      daemon_reload: true

  # - name: restart and enable
  #   ansible.builtin.system:
  #     name: backend
  #     state: started
  #     enabled: yes

  - name: restart and enable
    ansible.builtin.service:
      name: backend
      state: started
      enabled: yes







